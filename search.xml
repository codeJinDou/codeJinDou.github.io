<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Vue常见基本错误</title>
    <url>/2020/05/14/Vue%E5%B8%B8%E8%A7%81%E5%9F%BA%E6%9C%AC%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h3 id="–内容开始–"><a href="#–内容开始–" class="headerlink" title="–内容开始–"></a>–内容开始–</h3><h4 id="1-在学习Vue的过程中-出现这个Uncaught-ReferenceError-Vue-is-not-defined-未捕获ReferenceError-Vue没有定义-为什么Vue没有定义呢"><a href="#1-在学习Vue的过程中-出现这个Uncaught-ReferenceError-Vue-is-not-defined-未捕获ReferenceError-Vue没有定义-为什么Vue没有定义呢" class="headerlink" title="1.在学习Vue的过程中,出现这个Uncaught ReferenceError: Vue is not defined ,  未捕获ReferenceError:Vue没有定义 ,为什么Vue没有定义呢?"></a>1.在学习Vue的过程中,出现这个Uncaught ReferenceError: Vue is not defined ,  未捕获ReferenceError:Vue没有定义 ,为什么Vue没有定义呢?</h4><p>目前说的最多的是”过早关闭脚本标签”, 没有Vue标签所以js无法找到</p>
<p>原来是缺了这个:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>这种情况报错只需要把这个标签放到头部即可</p>
<h4 id="2-初次体验Vue-js为什么不出效果呢"><a href="#2-初次体验Vue-js为什么不出效果呢" class="headerlink" title="2.初次体验Vue.js为什么不出效果呢?"></a><em>2</em>.初次体验Vue.js为什么不出效果呢?</h4><p>把代码看了一遍又一遍,每个代码都没有放过,却还是出错,照着Vue的官方文档翻出来看。</p>
<p>突然发现e1的问题,把e(1)数字1改成e(l)字母小写l</p>
<img src="/2020/05/14/Vue%E5%B8%B8%E8%A7%81%E5%9F%BA%E6%9C%AC%E9%94%99%E8%AF%AF/捕获.PNG" style="zoom:80%;">

<p>对了！！！效果实现了！！！！</p>
<h4 id="3-在搭建Vue的运行环境是-在下载Vue-Cli3脚手架时报了如下错"><a href="#3-在搭建Vue的运行环境是-在下载Vue-Cli3脚手架时报了如下错" class="headerlink" title="3.在搭建Vue的运行环境是,在下载Vue-Cli3脚手架时报了如下错:"></a>3.在搭建Vue的运行环境是,在下载Vue-Cli3脚手架时报了如下错:</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm ERR! code EEXIST</span><br><span class="line">npm ERR! <span class="built_in">path</span> C:\Users\hasee\AppData\Roaming\npm\node_modules\@vue\cli\bin\vue.js</span><br><span class="line">npm ERR! dest C:\Users\hasee\AppData\Roaming\npm\vue.<span class="built_in">cmd</span></span><br><span class="line">npm ERR! EEXIST: file already exists, <span class="built_in">cmd</span> shim 'C:\Users\hasee\AppData\Roaming\npm\node_modules\@vue\cli\bin\vue.js' -&gt; 'C:\Users\hasee\AppData\Roaming\npm\vue.<span class="built_in">cmd</span>'</span><br><span class="line">npm ERR! File exists: C:\Users\hasee\AppData\Roaming\npm\vue.<span class="built_in">cmd</span></span><br><span class="line">npm ERR! Remove the existing file and try again, or run npm</span><br><span class="line">npm ERR! with --force to overwrite files recklessly.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found <span class="keyword">in</span>:</span><br><span class="line">npm ERR!     C:\Users\hasee\AppData\Roaming\npm-cache\_logs\<span class="number">2020</span>-<span class="number">05</span>-<span class="number">20</span>T14_07_31_294Z-debug.log</span><br></pre></td></tr></table></figure>

<p>这个问题用了两三个小时,几乎CSDN答案全部试了一遍都没对,因为之前下载过npm,现在从新下载npm.CLI3想要覆盖之前的npm下载脚手架npm.Cli2,现在导致失败,最终找到问题:</p>
<p> C:\Users\hasee\AppData\Roaming\npm  下面的npm文件夹删除就好了:</p>
<img src="/2020/05/14/Vue%E5%B8%B8%E8%A7%81%E5%9F%BA%E6%9C%AC%E9%94%99%E8%AF%AF/VueCLI3删除.PNG" style="zoom:100%;">



<p>打开cmd在控制台输入：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure>

<p> 出现如下信息 :</p>
<img src="/2020/05/14/Vue%E5%B8%B8%E8%A7%81%E5%9F%BA%E6%9C%AC%E9%94%99%E8%AF%AF/VueCLI3.PNG" style="zoom: 150%;">

<p>则表示成功下载Vue.CLI3的脚手架啦！！</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>leading end</tag>
      </tags>
  </entry>
  <entry>
    <title>ActiveMQ</title>
    <url>/2020/04/04/ActiveMQ/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>消息中间件</category>
      </categories>
      <tags>
        <tag>ActiveMQ</tag>
      </tags>
  </entry>
  <entry>
    <title>Java编程思想第四版(Interfaces )----第9章课后练习1-19(个人练习)</title>
    <url>/2020/04/01/Java%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E7%AC%AC%E5%9B%9B%E7%89%88(Interfaces%20)----%E7%AC%AC9%E7%AB%A0%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A01-19(%E4%B8%AA%E4%BA%BA%E7%BB%83%E4%B9%A0)/</url>
    <content><![CDATA[<hr>
<h4 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test93</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Rodent4[] rodents = &#123;<span class="keyword">new</span> Mouse4(),<span class="keyword">new</span> Gerbil4(),<span class="keyword">new</span> Hamster4()&#125;;</span><br><span class="line">        <span class="keyword">for</span> (Rodent4 r : rodents)&#123;</span><br><span class="line">            r.universal();</span><br><span class="line">            System.out.println(r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Rodent4</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mouse4</span> <span class="keyword">extends</span> <span class="title">Rodent4</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Mouse4.method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Mouse4"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gerbil4</span> <span class="keyword">extends</span> <span class="title">Rodent4</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Gerbil4.method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Gerbil4"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hamster4</span> <span class="keyword">extends</span> <span class="title">Rodent4</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hamster4.method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hamster4"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">		<span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">T</span></span>&#123;</span><br><span class="line">			<span class="function"><span class="keyword">void</span> <span class="title">t</span><span class="params">()</span></span>&#123;</span><br><span class="line">	    System.out.println(<span class="string">"T.t()"</span>);</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test94</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//T t = new T();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Print</span></span>&#123;</span><br><span class="line">    Print()&#123;</span><br><span class="line">       print();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Print1</span> <span class="keyword">extends</span> <span class="title">Print</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> i = <span class="number">5</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Print1.print()  整形变量的值: "</span> + <span class="string">" "</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test95</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> Print1().print();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习4"><a href="#练习4" class="headerlink" title="练习4"></a>练习4</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test96</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMethod</span><span class="params">(Abs abs)</span> </span>&#123;</span><br><span class="line">	    ((Abs2) abs).abs2();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getMethod2</span><span class="params">(Abs3 abs)</span> </span>&#123;</span><br><span class="line">	    abs.abs3();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">	    Test96.getMethod(<span class="keyword">new</span> Abs2());</span><br><span class="line">	    Test96.getMethod2(<span class="keyword">new</span> Abs4());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Abs</span> </span>&#123;</span><br><span class="line">    <span class="comment">//public abstract void getMethod();</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Abs2</span> <span class="keyword">extends</span> <span class="title">Abs</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">abs2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Abs2.abs2().."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Abs3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">abs3</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Abs4</span> <span class="keyword">extends</span> <span class="title">Abs3</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">abs3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Abs4.abs3()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="练习5-内容过于基础"><a href="#练习5-内容过于基础" class="headerlink" title="练习5   内容过于基础"></a>练习5   内容过于基础</h5><h5 id="练习6-内容过于基础"><a href="#练习6-内容过于基础" class="headerlink" title="练习6   内容过于基础"></a>练习6   内容过于基础</h5><h4 id="练习7"><a href="#练习7" class="headerlink" title="练习7"></a>练习7</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test99</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void Mouse() &#123;</span></span><br><span class="line"><span class="comment">        System.out.println("老鼠");</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void Gerbil() &#123;</span></span><br><span class="line"><span class="comment">        System.out.println("Ger 鼠");</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    @Override</span></span><br><span class="line"><span class="comment">    public void Hamster() &#123;</span></span><br><span class="line"><span class="comment">        System.out.println("大➕鼠");</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">        Test99 test99 = new Test99();</span></span><br><span class="line"><span class="comment">        test99.Gerbil();</span></span><br><span class="line"><span class="comment">        test99.Hamster();</span></span><br><span class="line"><span class="comment">        test99.Mouse();</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Rodent10[] rodents = &#123;<span class="keyword">new</span> Mouse10(),<span class="keyword">new</span> Gerbil10(),<span class="keyword">new</span> Hamster10()&#125;;</span><br><span class="line">        <span class="keyword">for</span> (Rodent10 r : rodents)&#123;</span><br><span class="line">            r.universal();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Rodent10</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Mouse10</span> <span class="keyword">implements</span> <span class="title">Rodent10</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Mouse10.method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Gerbil10</span> <span class="keyword">implements</span> <span class="title">Rodent10</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Gerbil10.method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hamster10</span> <span class="keyword">implements</span> <span class="title">Rodent10</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">universal</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hamster10.method"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="练习8"><a href="#练习8" class="headerlink" title="练习8"></a>练习8</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test100</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        (<span class="keyword">new</span> FastFoodImpl()).One1();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">FastFood</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">One1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FastFoodImpl</span> <span class="keyword">implements</span> <span class="title">FastFood</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">One1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"FastFoodImpl.One1()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习9"><a href="#练习9" class="headerlink" title="练习9"></a>练习9</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">enum</span> Note&#123;</span><br><span class="line">	MIDDLE_C, C_SHARP, B_FLAT</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> VALUE = <span class="number">5</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Playable</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Common</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wind</span> <span class="keyword">implements</span> <span class="title">Instrument</span>, <span class="title">Playable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* public void play(Note n) &#123; System.out.println("Wind.play() " + n); &#125;*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Wind"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Adjusting Wind"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Windinterface.play() "</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Percussion</span> <span class="keyword">implements</span> <span class="title">Instrument</span>, <span class="title">Playable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* @Override</span></span><br><span class="line"><span class="comment">     public void play(Note n) &#123; System.out.println("Percussion.play() " + n); &#125;*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Percussion"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Adjusting Percussion"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Percussioninterface.play() "</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stringed</span> <span class="keyword">implements</span> <span class="title">Instrument</span>, <span class="title">Playable</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void play(Note n) &#123; System.out.println("Stringed.play() " + n); &#125;*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Stringed"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Adjusting Stringed"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Stringedinterface.play() "</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Brass</span> <span class="keyword">extends</span> <span class="title">Wind</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Brass.play() "</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Adjusting Brass"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woodwind</span> <span class="keyword">extends</span> <span class="title">Wind</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Woodwind.play() "</span> + n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Woodwind"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test101</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Doesn't care about type, so new types</span></span><br><span class="line">    <span class="comment">// added to the system still work right:</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tune</span><span class="params">(Playable p)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        p.play(Note.MIDDLE_C);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tuneAll</span><span class="params">(Playable[] e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Playable i : e) &#123;</span><br><span class="line">             tune(i);</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Upcasting during addition to the array:</span></span><br><span class="line">        Playable[] playable = &#123;</span><br><span class="line">                <span class="keyword">new</span> Wind(),</span><br><span class="line">                <span class="keyword">new</span> Percussion(),</span><br><span class="line">                <span class="keyword">new</span> Stringed(),</span><br><span class="line">                <span class="comment">// new Brass(),</span></span><br><span class="line">                <span class="comment">//new Woodwind()</span></span><br><span class="line">        &#125;;</span><br><span class="line">        tuneAll(playable);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习10"><a href="#练习10" class="headerlink" title="练习10"></a>练习10</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	<span class="keyword">enum</span> Note&#123;</span><br><span class="line">	MIDDLE_C, C_SHARP, B_FLAT</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Instrument</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> VALUE = <span class="number">5</span>;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span></span>;</span><br><span class="line">            <span class="function"><span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Common</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wind</span> <span class="keyword">implements</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123; System.out.println(<span class="string">"Wind.play() "</span> + n); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Wind"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Adjusting Wind"</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Percussion</span> <span class="keyword">implements</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123; System.out.println(<span class="string">"Percussion.play() "</span> + n); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Percussion"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Adjusting Percussion"</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stringed</span> <span class="keyword">implements</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123; System.out.println(<span class="string">"Stringed.play() "</span> + n); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Stringed"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Adjusting Stringed"</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Brass</span> <span class="keyword">extends</span> <span class="title">Wind</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123; System.out.println(<span class="string">"Brass.play() "</span> + n); &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">adjust</span><span class="params">()</span> </span>&#123; System.out.println(<span class="string">"Adjusting Brass"</span>); &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Woodwind</span> <span class="keyword">extends</span> <span class="title">Wind</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">(Note n)</span> </span>&#123;System.out.println(<span class="string">"Woodwind.play() "</span> + n); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Woodwind"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test102</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Doesn't care about type, so new types</span></span><br><span class="line">    <span class="comment">// added to the system still work right:</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tune</span><span class="params">(Instrument i)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        i.play(Note.MIDDLE_C);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">tuneAll</span><span class="params">(Instrument[] e)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Instrument i : e) &#123;</span><br><span class="line">            <span class="comment">// tune(i);</span></span><br><span class="line">            System.out.println(i.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Upcasting during addition to the array:</span></span><br><span class="line">        Instrument[] orchestra = &#123;</span><br><span class="line">                <span class="keyword">new</span> Wind(),</span><br><span class="line">                <span class="keyword">new</span> Percussion(),</span><br><span class="line">                <span class="keyword">new</span> Stringed(),</span><br><span class="line">                <span class="comment">// new Brass(),</span></span><br><span class="line">                <span class="comment">//new Woodwind()</span></span><br><span class="line">        &#125;;</span><br><span class="line">        tuneAll(orchestra);</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习11"><a href="#练习11" class="headerlink" title="练习11"></a>练习11</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">	</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Processor</span></span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">name</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">Object <span class="title">process</span><span class="params">(Object input)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">process</span><span class="params">(Processor p, Object s)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"using Processor"</span> + p.name());</span><br><span class="line">        System.out.println(p.process(s));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">charterPaidSwapper</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> String <span class="title">swapper</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">        StringBuilder sb =  <span class="keyword">new</span> StringBuilder(s);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sb.length()-<span class="number">1</span>; i+=<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">char</span> c1 = sb.charAt(i);</span><br><span class="line">            <span class="keyword">char</span> c2 = sb.charAt(i + <span class="number">1</span>);</span><br><span class="line">            sb.setCharAt(i,c2);</span><br><span class="line">            sb.setCharAt(i+<span class="number">1</span>,c1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">charAdapter</span> <span class="keyword">implements</span> <span class="title">Processor</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">name</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getClass().getSimpleName();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">process</span><span class="params">(Object input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> charterPaidSwapper.swapper((String)input);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test103</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Class.process(<span class="keyword">new</span> charAdapter(),<span class="string">"ABCDE"</span>);</span><br><span class="line">        Class.process(<span class="keyword">new</span> charAdapter(),<span class="string">"12345"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习12"><a href="#练习12" class="headerlink" title="练习12"></a>练习12</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CanClimb</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span>  <span class="title">Climb</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CanFight</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span>  <span class="title">Fight</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CanSwim</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span>  <span class="title">swim</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">CanFly</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span>  <span class="title">fly</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActionCharactor</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fight</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Hero</span> <span class="keyword">extends</span> <span class="title">ActionCharactor</span> <span class="keyword">implements</span> <span class="title">CanClimb</span>,<span class="title">CanFight</span>,<span class="title">CanSwim</span>,<span class="title">CanFly</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Climb</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hero.Climb()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swim</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test104</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">c</span><span class="params">(CanClimb cc)</span></span>&#123;cc.Climb();&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span><span class="params">(CanFight cc)</span></span>&#123;cc.Fight();&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cs</span><span class="params">(CanSwim cc)</span></span>&#123;cc.swim();&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cf</span><span class="params">(CanFly cc)</span></span>&#123;cc.fly();&#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">a</span><span class="params">(ActionCharactor cc)</span></span>&#123;cc.Fight();&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Hero hero = <span class="keyword">new</span> Hero();</span><br><span class="line">        c(hero);</span><br><span class="line">        f(hero);</span><br><span class="line">        cs(hero);</span><br><span class="line">        cf(hero);</span><br><span class="line">        a(hero);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习13"><a href="#练习13" class="headerlink" title="练习13"></a>练习13</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">One1</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">One2</span> <span class="keyword">extends</span> <span class="title">One1</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">One3</span> <span class="keyword">extends</span> <span class="title">One1</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">One4</span> <span class="keyword">extends</span> <span class="title">One2</span>,<span class="title">One3</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test105</span> <span class="keyword">implements</span> <span class="title">One4</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span> + <span class="string">"  "</span> + <span class="string">"method1()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test105 test105 = <span class="keyword">new</span> Test105();</span><br><span class="line">        test105.method1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习14"><a href="#练习14" class="headerlink" title="练习14"></a>练习14</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Monster</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method1</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method2</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Jinjin</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method3</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method4</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Yiyi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method5</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method6</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Renren</span> <span class="keyword">extends</span> <span class="title">Monster</span>, <span class="title">Jinjin</span>, <span class="title">Yiyi</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method7</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class1</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class2</span> <span class="keyword">extends</span> <span class="title">Class1</span> </span>&#123;</span><br><span class="line">    Renren renren = <span class="keyword">new</span> Renren() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method7</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clacc</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">M</span><span class="params">(Object m)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">J</span><span class="params">(Object j)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Y</span><span class="params">(Object y)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">R</span><span class="params">(Object r)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test106</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Class2 class2 = <span class="keyword">new</span> Class2();</span><br><span class="line">        Clacc.M(class2);</span><br><span class="line">        Clacc.J(class2);</span><br><span class="line">        Clacc.R(class2);</span><br><span class="line">        Clacc.Y(class2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习15"><a href="#练习15" class="headerlink" title="练习15"></a>练习15</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Monster2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method1</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method2</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Jinjin2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method3</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method4</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Yiyi2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method5</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method6</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Renren2</span> <span class="keyword">extends</span> <span class="title">Monster2</span>, <span class="title">Jinjin2</span>, <span class="title">Yiyi2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Method7</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class3</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class4</span> <span class="keyword">extends</span> <span class="title">Class2</span> </span>&#123;</span><br><span class="line">    Renren renren = <span class="keyword">new</span> Renren() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method7</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method5</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method6</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method3</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method4</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Method2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clacc2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">M</span><span class="params">(Object m)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">J</span><span class="params">(Object j)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Y</span><span class="params">(Object y)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">R</span><span class="params">(Object r)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ATTClass</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">att</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test107</span> <span class="keyword">extends</span> <span class="title">ATTClass</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">att</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Test107.att()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Class4 class4 = <span class="keyword">new</span> Class4();</span><br><span class="line">        Clacc.M(class4);</span><br><span class="line">        Clacc.J(class4);</span><br><span class="line">        Clacc.R(class4);</span><br><span class="line">        Clacc.Y(class4);</span><br><span class="line">        <span class="keyword">new</span> Test107().att();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="练习16"><a href="#练习16" class="headerlink" title="练习16"></a>练习16</h5><h4 id="练习17"><a href="#练习17" class="headerlink" title="练习17"></a>练习17</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**java编程思想 第九章练习17</span></span><br><span class="line"><span class="comment"> * 证明在接口中的域隐式是static和final的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Months</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span></span><br><span class="line">        JANUARY = <span class="number">1</span>, FEBRUARY = <span class="number">2</span>, March = <span class="number">3</span>, April = <span class="number">4</span>, MAY = <span class="number">5</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test109</span> <span class="keyword">implements</span> <span class="title">Months</span></span>&#123;</span><br><span class="line">    <span class="comment">//int MAY = 5, JANUARY = 1, FEBRUARY = 2, March = 3, April = 4;  Error:(9, 35) java: 无法从静态上下文中引用非静态 变量 JANUARY</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Test109.JANUARY);</span><br><span class="line">        System.out.println(Test109.FEBRUARY);</span><br><span class="line">        System.out.println(Test109.March);</span><br><span class="line">        System.out.println(Test109.April);</span><br><span class="line">        System.out.println(Test109.MAY);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习18"><a href="#练习18" class="headerlink" title="练习18"></a>练习18</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java编程思想第九章  练习18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Cycle10</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Cycle10Factory</span></span>&#123;</span><br><span class="line">    <span class="function">Cycle10 <span class="title">getCycle10</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Unicycle10</span> <span class="keyword">implements</span> <span class="title">Cycle10</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Unicycle10.method1()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Unicycle10Factory</span> <span class="keyword">implements</span> <span class="title">Cycle10Factory</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cycle10 <span class="title">getCycle10</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Unicycle10();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bicycle10</span> <span class="keyword">implements</span> <span class="title">Cycle10</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Bicycle10.method1()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bicycle10Factory</span> <span class="keyword">implements</span> <span class="title">Cycle10Factory</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cycle10 <span class="title">getCycle10</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Bicycle10();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tricycle10</span> <span class="keyword">implements</span> <span class="title">Cycle10</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">method1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Tricycle10.method1()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tricycle10Factory</span> <span class="keyword">implements</span> <span class="title">Cycle10Factory</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Cycle10 <span class="title">getCycle10</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Tricycle10();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test110</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test1</span><span class="params">(Unicycle10Factory unicycle10Factory)</span> </span>&#123;</span><br><span class="line">        Cycle10 cycle10 = unicycle10Factory.getCycle10();</span><br><span class="line">        cycle10.method1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test2</span><span class="params">(Bicycle10Factory bicycle10Factory)</span> </span>&#123;</span><br><span class="line">        Cycle10 cycle10 = bicycle10Factory.getCycle10();</span><br><span class="line">        cycle10.method1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Test3</span><span class="params">(Tricycle10Factory tricycle10Factory)</span> </span>&#123;</span><br><span class="line">        Cycle10 cycle10 = tricycle10Factory.getCycle10();</span><br><span class="line">        cycle10.method1();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test1(<span class="keyword">new</span> Unicycle10Factory());</span><br><span class="line">        Test2(<span class="keyword">new</span> Bicycle10Factory());</span><br><span class="line">        Test3(<span class="keyword">new</span> Tricycle10Factory());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习19"><a href="#练习19" class="headerlink" title="练习19"></a>练习19</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.regexp.internal.RE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java编程思想第九章 练习19</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test111</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ThrowImpl <span class="title">ThrowFileFactory1</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThrowImpl().getThrow();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FilpImpl <span class="title">ThrowFileFactory2</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (FilpImpl) <span class="keyword">new</span> FilpImpl().getfilp();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       ThrowFileFactory1();</span><br><span class="line">       ThrowFileFactory2();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Throw</span></span>&#123;</span><br><span class="line">    <span class="function">ThrowImpl <span class="title">getThrow</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Filp</span></span>&#123;</span><br><span class="line">    <span class="function">Filp <span class="title">getfilp</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThrowImpl</span> <span class="keyword">implements</span> <span class="title">Throw</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ThrowImpl <span class="title">getThrow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"工厂方法实现了抛硬币功能"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThrowImpl();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FilpImpl</span> <span class="keyword">implements</span> <span class="title">Filp</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Filp <span class="title">getfilp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"工厂方法执行了掷筛子功能"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FilpImpl();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Books to practice</tag>
      </tags>
  </entry>
  <entry>
    <title>java编程思想第四版(内部类)----第10章课后练习1-26(个人练习)</title>
    <url>/2020/04/06/Java%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E7%AC%AC%E5%9B%9B%E7%89%88(%E5%86%85%E9%83%A8%E7%B1%BB)----%E7%AC%AC10%E7%AB%A0%E8%AF%BE%E5%90%8E%E7%BB%83%E4%B9%A01-26(%E4%B8%AA%E4%BA%BA%E7%BB%83%E4%B9%A0)/</url>
    <content><![CDATA[<hr>
<h4 id="练习1"><a href="#练习1" class="headerlink" title="练习1"></a>练习1</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test112</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Inner <span class="title">getInner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Inner();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner</span> </span>&#123;</span><br><span class="line">        Inner() &#123;</span><br><span class="line">            System.out.println(<span class="string">"。。"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test112 test112 = <span class="keyword">new</span> Test112();</span><br><span class="line">        Test112.Inner inner = test112.getInner();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="练习2"><a href="#练习2" class="headerlink" title="练习2"></a>练习2</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.org.apache.regexp.internal.RE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.midi.Sequence;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Selector</span></span>&#123;</span><br><span class="line">    <span class="comment">//是否结束</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">end</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//当前</span></span><br><span class="line">    <span class="function">Object <span class="title">current</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//下一个</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clazz</span></span>&#123;</span><br><span class="line">    String s;</span><br><span class="line">    Clazz(String s)&#123;</span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Clazz&#123;"</span> +</span><br><span class="line">                <span class="string">"s='"</span> + s + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test113</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object[] item;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> next = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test113</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        item = <span class="keyword">new</span> Object[size];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Object x)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(next &lt; item.length)&#123;</span><br><span class="line">            item[next++] = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">SequenceSelector</span> <span class="keyword">implements</span> <span class="title">Selector</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">end</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> i == item.length;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">current</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> item[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; item.length)</span><br><span class="line">                i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Selector <span class="title">selector</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SequenceSelector();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test113 test113 = <span class="keyword">new</span> Test113(<span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            test113.add(<span class="keyword">new</span> Clazz(<span class="string">"其他的对象数量为"</span> + i));</span><br><span class="line">        &#125;</span><br><span class="line">        Selector selector = test113.selector();</span><br><span class="line">        <span class="keyword">while</span> (! selector.end())&#123;</span><br><span class="line">            System.out.println(selector.current() + <span class="string">" "</span>);</span><br><span class="line">            selector.next();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习3"><a href="#练习3" class="headerlink" title="练习3"></a>练习3</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test114</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    Test114(String string)&#123;</span><br><span class="line">        <span class="keyword">this</span>.string = string;</span><br><span class="line">        System.out.println(<span class="string">"Tset114 constructor"</span> + <span class="string">" "</span> + string);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Inner2 <span class="title">getInner</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Inner2(string);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner2</span> </span>&#123;</span><br><span class="line">         String string;</span><br><span class="line">        Inner2(String string) &#123;</span><br><span class="line">            <span class="keyword">super</span>();</span><br><span class="line">            System.out.println(<span class="string">"。。"</span> + string);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Inner2&#123;"</span> +</span><br><span class="line">                    <span class="string">"string='"</span> + string + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">new</span> Test114(<span class="string">"S"</span>).getInner();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习4"><a href="#练习4" class="headerlink" title="练习4"></a>练习4</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java编程思想第十章 练习4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Selector3</span></span>&#123;</span><br><span class="line">    <span class="comment">//是否结束</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">end</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//当前</span></span><br><span class="line">    <span class="function">Object <span class="title">current</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//下一个</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">next</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Clazz3</span></span>&#123;</span><br><span class="line">    String s;</span><br><span class="line">    Clazz3(String s)&#123;</span><br><span class="line">        <span class="keyword">this</span>.s = s;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Clazz3&#123;"</span> +</span><br><span class="line">                <span class="string">"s='"</span> + s + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test115</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Object[] item;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> next = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test115</span><span class="params">(<span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        item = <span class="keyword">new</span> Object[size];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Object x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (next &lt; item.length) &#123;</span><br><span class="line">            item[next++] = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*  private class SequenceSelector implements Selector3&#123;</span></span><br><span class="line"><span class="comment">          private int i = 0;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          @Override</span></span><br><span class="line"><span class="comment">          public boolean end() &#123;</span></span><br><span class="line"><span class="comment">              return i == item.length;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          @Override</span></span><br><span class="line"><span class="comment">          public Object current() &#123;</span></span><br><span class="line"><span class="comment">              return item[i];</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          @Override</span></span><br><span class="line"><span class="comment">          public void next() &#123;</span></span><br><span class="line"><span class="comment">              if (i &lt; item.length)</span></span><br><span class="line"><span class="comment">                  i++;</span></span><br><span class="line"><span class="comment">          &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">          &#125;*/</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">SequenceSelector</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Test115 <span class="title">getTest115Outer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> Test115.<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"SequenceSelector"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/*  public Selector3 selector()&#123;</span></span><br><span class="line"><span class="comment">        return new SequenceSelector();</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test115 test115 = <span class="keyword">new</span> Test115(<span class="number">10</span>);</span><br><span class="line">        Test115.SequenceSelector ts = test115.<span class="keyword">new</span> SequenceSelector();</span><br><span class="line">        System.out.println(ts);</span><br><span class="line">       <span class="comment">/* for (int i = 0; i &lt; 10; i++) &#123;</span></span><br><span class="line"><span class="comment">            test115.add(new Clazz("其他的对象数量为" + i));</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        Selector3 selector3 = test115.selector();</span></span><br><span class="line"><span class="comment">        while (! selector3.end())&#123;</span></span><br><span class="line"><span class="comment">            System.out.println(selector3.current() + " ");</span></span><br><span class="line"><span class="comment">            selector3.next();</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习5"><a href="#练习5" class="headerlink" title="练习5"></a>练习5</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java 编程思想第十章 练习5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test119</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">T</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">t</span><span class="params">()</span></span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Test119。T.t()"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span>  <span class="string">"T"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">E</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test119 test119 = <span class="keyword">new</span> Test119();</span><br><span class="line">        Test119.T t = test119.<span class="keyword">new</span> T();</span><br><span class="line">        System.out.println(t);</span><br><span class="line">        t.t();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="练习6"><a href="#练习6" class="headerlink" title="练习6"></a>练习6</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">package</span> debug;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> access.InterMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClazzMethod</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="class"><span class="keyword">class</span> <span class="title">ClazzInner</span> <span class="keyword">implements</span> <span class="title">InterMethod</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">InterMethod1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"ClazzMethod.ClzzInner.InterMethod1"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> access;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">InterMethod</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InterMethod1</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> debugoff;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> access.InterMethod;</span><br><span class="line"><span class="keyword">import</span> com.jinyi.test.C;</span><br><span class="line"><span class="keyword">import</span> debug.ClazzMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExClazz</span> <span class="keyword">extends</span> <span class="title">ClazzMethod</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> InterMethod <span class="title">getInterMethod1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (InterMethod) <span class="keyword">new</span> ExClazz();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> InterMethod <span class="title">getClzzInnerObj</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ClazzInner();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习7"><a href="#练习7" class="headerlink" title="练习7"></a>练习7</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.corba.se.impl.oa.toa.TOA;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test117</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String string;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Test117</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.string = string;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> string;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setString</span><span class="params">(String string)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.string = string;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updata</span><span class="params">(String string)</span></span>&#123;</span><br><span class="line">        setString(string);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Test117&#123;"</span> +</span><br><span class="line">                <span class="string">"string='"</span> + string + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Inner</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String string;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Inner</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.string = string;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updata2</span><span class="params">()</span></span>&#123;</span><br><span class="line">            updata(string);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Inner&#123;"</span> +</span><br><span class="line">                    <span class="string">"string='"</span> + string + <span class="string">'\''</span> +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Inner <span class="title">getInner</span><span class="params">()</span></span>&#123;</span><br><span class="line">       Test117 test117 = <span class="keyword">new</span> Test117();</span><br><span class="line">       Test117.Inner inner = test117.<span class="keyword">new</span> Inner();</span><br><span class="line">       inner.updata2();</span><br><span class="line">       <span class="keyword">return</span> inner;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test117 test117 = <span class="keyword">new</span> Test117();</span><br><span class="line">        test117.updata(<span class="string">"你好"</span>);</span><br><span class="line">        System.out.println(test117);</span><br><span class="line">        Test117.Inner inner = test117.<span class="keyword">new</span> Inner();</span><br><span class="line">        test117.getInner();</span><br><span class="line">        System.out.println(test117 + <span class="string">" "</span> + inner);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="练习8"><a href="#练习8" class="headerlink" title="练习8"></a>练习8</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jinyi.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * java编程思想第十章 练习8</span></span><br><span class="line"><span class="comment"> * 答案: 可以</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test118</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> C c;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">C</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Integer integer;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInteger</span><span class="params">(Integer integer)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.integer = integer;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">            Test118.<span class="keyword">this</span>.UD();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"C&#123;"</span> +</span><br><span class="line">                    <span class="string">"integer="</span> + integer +</span><br><span class="line">                    <span class="string">'&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UD</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Test118"</span> + c.integer);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> C <span class="title">getC</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> C();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Test118 test118 = <span class="keyword">new</span> Test118();</span><br><span class="line">        Test118.C c = test118.getC();</span><br><span class="line">        <span class="comment">//c.show();</span></span><br><span class="line">        Random random = <span class="keyword">new</span> Random(<span class="number">47</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">10</span> ; i++) &#123;</span><br><span class="line">            <span class="comment">//设置内部类私有域</span></span><br><span class="line">            c.setInteger(i);</span><br><span class="line">            System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置内部类私有方法</span></span><br><span class="line">        c.setInteger(random.nextInt(<span class="number">5</span>));</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Books to practice</tag>
      </tags>
  </entry>
  <entry>
    <title>前后端分离</title>
    <url>/2020/05/14/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>前后端分离</category>
      </categories>
      <tags>
        <tag>前后端分离</tag>
      </tags>
  </entry>
  <entry>
    <title>redis</title>
    <url>/2020/04/04/redis/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>消息中间件</category>
      </categories>
      <tags>
        <tag>redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Springcloud</title>
    <url>/2020/04/04/Springcloud/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>云服务</category>
      </categories>
      <tags>
        <tag>Springcloud</tag>
      </tags>
  </entry>
  <entry>
    <title>Springboot</title>
    <url>/2020/04/04/Springboot/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>爪哇frame</category>
      </categories>
      <tags>
        <tag>Springboot</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring</title>
    <url>/2020/04/04/Spring/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>爪哇frame</category>
      </categories>
      <tags>
        <tag>Spring</tag>
      </tags>
  </entry>
  <entry>
    <title>Springmvc</title>
    <url>/2020/04/04/Springmvc/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>爪哇frame</category>
      </categories>
      <tags>
        <tag>Springmvc</tag>
      </tags>
  </entry>
  <entry>
    <title>爪哇frame</title>
    <url>/2020/04/02/%E7%88%AA%E5%93%87frame/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>爪哇frame</category>
      </categories>
      <tags>
        <tag>Mybaties</tag>
      </tags>
  </entry>
  <entry>
    <title>云服务</title>
    <url>/2020/04/02/%E4%BA%91%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>云服务</category>
      </categories>
      <tags>
        <tag>DaoVoice</tag>
      </tags>
  </entry>
  <entry>
    <title>前端</title>
    <url>/2020/05/14/%E5%89%8D%E7%AB%AF/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>后端</title>
    <url>/2020/05/14/%E5%90%8E%E7%AB%AF/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>爪哇SE</title>
    <url>/2020/04/02/%E7%88%AA%E5%93%87SE/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>爪哇SE</category>
      </categories>
      <tags>
        <tag>等等</tag>
      </tags>
  </entry>
  <entry>
    <title>Struts2</title>
    <url>/2020/04/04/Struts2/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>爪哇frame</category>
      </categories>
      <tags>
        <tag>Struts2</tag>
      </tags>
  </entry>
  <entry>
    <title>Kafka</title>
    <url>/2020/04/04/Kafka/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>消息中间件</category>
      </categories>
      <tags>
        <tag>Kafka</tag>
      </tags>
  </entry>
  <entry>
    <title>消息中间件</title>
    <url>/2020/04/02/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>消息中间件</category>
      </categories>
      <tags>
        <tag>RibbitMQ,</tag>
      </tags>
  </entry>
  <entry>
    <title>leancloud</title>
    <url>/2020/04/04/leancloud/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>云服务</category>
      </categories>
      <tags>
        <tag>leancloud</tag>
      </tags>
  </entry>
  <entry>
    <title>缓存系列</title>
    <url>/2020/04/02/%E7%BC%93%E5%AD%98%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>缓存系列</category>
      </categories>
      <tags>
        <tag>Ehcache</tag>
      </tags>
  </entry>
  <entry>
    <title>微服务系列</title>
    <url>/2020/04/02/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>微服务系列</category>
      </categories>
      <tags>
        <tag>Dubbo</tag>
      </tags>
  </entry>
  <entry>
    <title>RibbitMQ</title>
    <url>/2020/04/04/RibbitMQ/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>Herbernate</title>
    <url>/2020/04/04/Herbernate/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>这是我的第一篇博客文章</title>
    <url>/2020/03/31/%E8%BF%99%E6%98%AF%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<pre><code>##一 1.这是我的第一篇博客文章
        今天第一天注册个人博客,到来的朋友我们可以一起学习进步！
        哈哈!

        --</code></pre>]]></content>
  </entry>
</search>
